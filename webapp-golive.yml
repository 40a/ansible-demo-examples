# Standup an infrastructure and deploy an application onto it

---
# Create VLB
- hosts: all
  gather_facts: False
  remote_user: ec2-user
  sudo: yes

  vars_files:
  - group_vars/all

  tasks:
  - name: Create ELB
    local_action:
      module: ec2_elb_lb
      state: present
      name: "{{ app_name }}"
      security_group_ids: 'sg-70d43f15,sg-fe30d99b'
      region: "{{ ec2_region }}"
      subnets: 'subnet-85f61ce0'
      purge_subnets: yes
      connection_draining_timeout: 5
      listeners:
        - protocol: http
          load_balancer_port: 80
          instance_port: 8080

  - name: Launch raw instances
    ec2: >
     access_key="{{ ec2_access_key }}"
     secret_key="{{ ec2_secret_key }}"
     keypair="{{ ec2_keypair }}"
     group="{{ ec2_security_group }}"
     type="{{ ec2_instance_type }}"
     image="{{ ec2_image }}"
     region="{{ ec2_region }}"
     instance_tags="{'ansible_group':'{{ ansible_group }}', 'group':'{{ ec2_security_group }}','Name':'{{ server_type }}' }"
     count="{{ ec2_instance_count }}"
     wait=true
    register: ec2

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout={{ aws_timeout }} state=started
    with_items: ec2.instances

# Deploy a simple standalone JBoss server and deploys the app
  - name: Deployt the app server and app
    roles:
     - jboss-standalone
     - webapp

# Register hosts with ELB
  - name: Add hosts to ELB
    local_action:
      module: ec2_elb
      state: present
      region: "{{ ec2_region }}"
      ec2_elbs: "{{ app_name }}"
      instance_id: "{{ item }}"
      with_items: ec2.instance-id
