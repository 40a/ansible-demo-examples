---
- name: Instantiate ec2 Instances
  hosts: all
  gather_facts: False
  connection: local
  
  vars_files:
  - end-to-end-vars
  
  tasks:
  - name: Launch raw instances
    ec2: >
     access_key="{{ ec2_access_key }}"
     secret_key="{{ ec2_secret_key }}"
     keypair="{{ ec2_keypair }}"
     type="{{ ec2_instance_type }}"
     image="{{ ec2_image }}"
     region="{{ ec2_region }}"
     instance_tags="{'ansible_group':'{{ ansible_group }}', 'group':'{{ ec2_security_group }}','Name':'{{ server_type }}' }"
     count="{{ ec2_instance_count }}"
     group_id="{{ec2_security_group}}"
     assign_public_ip="{{assign_public_ip}}"
     vpc_subnet_id="{{vpc_subnet_id}}"
     wait=true
    register: ec2

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout={{ aws_timeout }} state=started
    with_items: ec2.instances
    
  - name: Create ELB
    local_action:
     module: ec2_elb_lb
     state: present
     name: "{{ app_name }}"
     security_group_ids: 'sg-70d43f15,sg-fe30d99b'
     region: "{{ ec2_region }}"
     subnets: 'subnet-85f61ce0'
     vpc_subnet_id: 'subnet-85f61ce0'
     purge_subnets: yes
     connection_draining_timeout: 5
     listeners:
     - protocol: http
       load_balancer_port: 80
       instance_port: 8080
    
- name: Install JBoss
  hosts: all
  
  tasks:
   - include: jboss-standalone/site.yml
   - include: app-deploy/site.yml
   - include: elb-register-hosts.yml